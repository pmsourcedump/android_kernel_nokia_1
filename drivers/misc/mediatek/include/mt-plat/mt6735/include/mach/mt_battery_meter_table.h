/*
 * Copyright (C) 2015 MediaTek Inc.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 */

#ifndef _CUST_BATTERY_METER_TABLE_H
#define _CUST_BATTERY_METER_TABLE_H

#define BAT_NTC_10 1
#define BAT_NTC_47 0

#if (BAT_NTC_10 == 1)
#define RBAT_PULL_UP_R             16900
#endif

#if (BAT_NTC_47 == 1)
#define RBAT_PULL_UP_R             61900
#endif

#define RBAT_PULL_UP_VOLT          1800

typedef struct _BATTERY_PROFILE_STRUCT {
	signed int percentage;
	signed int voltage;
} BATTERY_PROFILE_STRUCT, *BATTERY_PROFILE_STRUCT_P;

typedef struct _R_PROFILE_STRUCT {
	signed int resistance;
	signed int voltage;
} R_PROFILE_STRUCT, *R_PROFILE_STRUCT_P;

typedef enum {
	T1_0C,
	T2_25C,
	T3_50C
} PROFILE_TEMPERATURE;

#if (BAT_NTC_10 == 1)
BATT_TEMPERATURE Batt_Temperature_Table[] = {
	{-400, 174844},
	{-390, 165691},
	{-380, 157103},
	{-370, 149040},
	{-360, 141464},
	{-350, 134341},
	{-340, 127639},
	{-330, 121330},
	{-320, 115386},
	{-310, 109782},
	{-300, 104497},
	{-290, 99538},
	{-280, 94846},
	{-270, 90404},
	{-260, 86198},
	{-250, 82214},
	{-240, 78437},
	{-230, 74856},
	{-220, 71459},
	{-210, 68235},
	{-200, 65175},
	{-190, 62291},
	{-180, 59545},
	{-170, 56929},
	{-160, 54437},
	{-150, 52062},
	{-140, 49799},
	{-130, 47643},
	{-120, 45587},
	{-110, 43627},
	{-100, 41758},
	{-90, 39987},
	{-80, 38294},
	{-70, 36677},
	{-60, 35131},
	{-50, 33653},
	{-40, 32241},
	{-30, 30892},
	{-20, 29603},
	{-10, 28372},
	{0, 27195},
	{10, 26065},
	{20, 24987},
	{30, 23959},
	{40, 22978},
	{50, 22041},
	{60, 21147},
	{70, 20293},
	{80, 19478},
	{90, 18699},
	{100, 17955},
	{110, 17244},
	{120, 16564},
	{130, 15915},
	{140, 15294},
	{150, 14700},
	{160, 14132},
	{170, 13588},
	{180, 13068},
	{190, 12571},
	{200, 12094},
	{210, 11638},
	{220, 11202},
	{230, 10784},
	{240, 10384},
	{250, 10000},
	{260, 9633},
	{270, 9280},
	{280, 8943},
	{290, 8619},
	{300, 8309},
	{310, 8012},
	{320, 7727},
	{330, 7453},
	{340, 7191},
	{350, 6939},
	{360, 6697},
	{370, 6465},
	{380, 6242},
	{390, 6028},
	{400, 5823},
	{410, 5626},
	{420, 5436},
	{430, 5254},
	{440, 5079},
	{450, 4911},
	{460, 4749},
	{470, 4593},
	{480, 4443},
	{490, 4299},
	{500, 4160},
	{510, 4026},
	{520, 3897},
	{530, 3773},
	{540, 3653},
	{550, 3538},
	{560, 3427},
	{570, 3320},
	{580, 3217},
	{590, 3117},
	{600, 3021},
	{610, 2928},
	{620, 2839},
	{630, 2753},
	{640, 2670},
	{650, 2589},
	{660, 2512},
	{670, 2437},
	{680, 2365},
	{690, 2295},
	{700, 2228},
	{710, 2162},
	{720, 2099},
	{730, 2039},
	{740, 1980},
	{750, 1923},
	{760, 1868},
	{770, 1815},
	{780, 1764},
	{790, 1715},
	{800, 1667},
	{810, 1621},
	{820, 1576},
	{830, 1533},
	{840, 1492},
	{850, 1451},
	{860, 1412},
	{870, 1374},
	{880, 1338},
	{890, 1302},
	{900, 1268},
	{910, 1235}
};
#endif

#if (BAT_NTC_47 == 1)
	BATT_TEMPERATURE Batt_Temperature_Table[] = {
	{-20, 483954},
	{-15, 360850},
	{-10, 271697},
	{ -5, 206463},
	{  0, 158214},
	{  5, 122259},
	{ 10, 95227},
	{ 15, 74730},
	{ 20, 59065},
	{ 25, 47000},
	{ 30, 37643},
	{ 35, 30334},
	{ 40, 24591},
	{ 45, 20048},
	{ 50, 16433},
	{ 55, 13539},
	{ 60, 11210}
	};
#endif

/* T0 -10C */
BATTERY_PROFILE_STRUCT battery_profile_t0[] = {
	{0, 4348},
	{2, 4323},
	{3, 4297},
	{5, 4266},
	{6, 4232},
	{8, 4210},
	{9, 4193},
	{11, 4177},
	{12, 4161},
	{14, 4145},
	{15, 4130},
	{17, 4115},
	{19, 4102},
	{20, 4092},
	{22, 4081},
	{23, 4063},
	{25, 4038},
	{26, 4013},
	{28, 3992},
	{29, 3976},
	{31, 3963},
	{32, 3951},
	{34, 3941},
	{36, 3930},
	{37, 3917},
	{39, 3905},
	{40, 3893},
	{42, 3882},
	{43, 3873},
	{45, 3863},
	{46, 3855},
	{48, 3847},
	{49, 3840},
	{51, 3834},
	{53, 3828},
	{54, 3822},
	{56, 3816},
	{57, 3811},
	{59, 3807},
	{60, 3802},
	{62, 3798},
	{63, 3794},
	{65, 3791},
	{66, 3788},
	{68, 3786},
	{70, 3783},
	{71, 3780},
	{73, 3777},
	{74, 3773},
	{76, 3768},
	{77, 3763},
	{79, 3758},
	{80, 3752},
	{82, 3745},
	{83, 3737},
	{85, 3729},
	{87, 3721},
	{88, 3715},
	{90, 3709},
	{91, 3704},
	{93, 3698},
	{94, 3686},
	{96, 3659},
	{97, 3605},
	{99, 3514},
	{100, 3351},
	{100, 3351},
	{100, 3351},
	{100, 3351},
	{100, 3351},
	{100, 3351},
	{100, 3351},
	{100, 3351},
	{100, 3351},
	{100, 3351},
	{100, 3351},
	{100, 3351},
	{100, 3351}
};

/* T1 0C */
BATTERY_PROFILE_STRUCT battery_profile_t1[] = {
	{0, 4376},
	{1, 4336},
	{3, 4287},
	{4, 4264},
	{6, 4245},
	{7, 4228},
	{9, 4212},
	{10, 4196},
	{11, 4181},
	{13, 4166},
	{14, 4151},
	{16, 4136},
	{17, 4122},
	{19, 4107},
	{20, 4095},
	{21, 4085},
	{23, 4077},
	{24, 4060},
	{26, 4034},
	{27, 4010},
	{29, 3992},
	{30, 3979},
	{31, 3970},
	{33, 3963},
	{34, 3956},
	{36, 3947},
	{37, 3936},
	{39, 3923},
	{40, 3910},
	{41, 3896},
	{43, 3884},
	{44, 3872},
	{46, 3862},
	{47, 3853},
	{49, 3845},
	{50, 3838},
	{51, 3831},
	{53, 3825},
	{54, 3819},
	{56, 3814},
	{57, 3809},
	{59, 3805},
	{60, 3800},
	{61, 3797},
	{63, 3793},
	{64, 3790},
	{66, 3787},
	{67, 3784},
	{69, 3782},
	{70, 3781},
	{71, 3779},
	{73, 3777},
	{74, 3774},
	{76, 3770},
	{77, 3766},
	{79, 3762},
	{80, 3757},
	{81, 3750},
	{83, 3743},
	{84, 3735},
	{86, 3726},
	{87, 3716},
	{89, 3707},
	{90, 3702},
	{91, 3699},
	{93, 3694},
	{94, 3687},
	{96, 3661},
	{97, 3597},
	{99, 3496},
	{100, 3391},
	{100, 3391},
	{100, 3391},
	{100, 3391},
	{100, 3391},
	{100, 3391},
	{100, 3391},
	{100, 3391}
};

/* T2 25C */
BATTERY_PROFILE_STRUCT battery_profile_t2[] = {
	{0, 4366},
	{1, 4343},
	{3, 4323},
	{4, 4304},
	{5, 4287},
	{7, 4271},
	{8, 4254},
	{10, 4238},
	{11, 4222},
	{12, 4207},
	{14, 4191},
	{15, 4176},
	{16, 4161},
	{18, 4146},
	{19, 4131},
	{21, 4116},
	{22, 4102},
	{23, 4087},
	{25, 4074},
	{26, 4065},
	{27, 4053},
	{29, 4033},
	{30, 4013},
	{32, 3998},
	{33, 3989},
	{34, 3982},
	{36, 3973},
	{37, 3963},
	{38, 3952},
	{40, 3942},
	{41, 3931},
	{43, 3919},
	{44, 3904},
	{45, 3888},
	{47, 3874},
	{48, 3863},
	{49, 3853},
	{51, 3845},
	{52, 3838},
	{54, 3832},
	{55, 3825},
	{56, 3820},
	{58, 3815},
	{59, 3809},
	{60, 3805},
	{62, 3801},
	{63, 3796},
	{65, 3792},
	{66, 3789},
	{67, 3786},
	{69, 3783},
	{70, 3779},
	{71, 3776},
	{73, 3772},
	{74, 3768},
	{76, 3764},
	{77, 3759},
	{78, 3754},
	{80, 3749},
	{81, 3744},
	{82, 3740},
	{84, 3733},
	{85, 3724},
	{87, 3716},
	{88, 3707},
	{89, 3696},
	{91, 3692},
	{92, 3690},
	{93, 3689},
	{95, 3685},
	{96, 3668},
	{98, 3609},
	{99, 3519},
	{100, 3365},
	{100, 3365},
	{100, 3365},
	{100, 3365},
	{100, 3365}
};

/* T3 50C */
BATTERY_PROFILE_STRUCT battery_profile_t3[] = {
	{0, 4389},
	{1, 4354},
	{3, 4329},
	{4, 4308},
	{5, 4289},
	{7, 4272},
	{7, 4272},
	{8, 4255},
	{8, 4255},
	{10, 4239},
	{11, 4223},
	{11, 4223},
	{12, 4207},
	{14, 4192},
	{15, 4176},
	{16, 4161},
	{18, 4146},
	{19, 4131},
	{20, 4116},
	{22, 4102},
	{23, 4088},
	{25, 4074},
	{26, 4061},
	{27, 4047},
	{29, 4034},
	{30, 4022},
	{31, 4009},
	{33, 3998},
	{34, 3986},
	{35, 3975},
	{37, 3964},
	{38, 3954},
	{39, 3944},
	{41, 3934},
	{42, 3924},
	{44, 3914},
	{45, 3900},
	{46, 3881},
	{48, 3867},
	{49, 3858},
	{50, 3849},
	{52, 3842},
	{53, 3835},
	{54, 3829},
	{56, 3823},
	{57, 3818},
	{59, 3813},
	{60, 3808},
	{61, 3804},
	{63, 3799},
	{64, 3796},
	{65, 3792},
	{67, 3788},
	{68, 3785},
	{69, 3782},
	{71, 3779},
	{72, 3775},
	{74, 3771},
	{75, 3766},
	{76, 3762},
	{78, 3757},
	{79, 3751},
	{80, 3747},
	{82, 3743},
	{83, 3737},
	{84, 3730},
	{86, 3721},
	{87, 3714},
	{89, 3703},
	{90, 3694},
	{91, 3692},
	{93, 3691},
	{94, 3689},
	{95, 3683},
	{97, 3653},
	{98, 3585},
	{99, 3482},
	{100, 3289}
};

/* battery profile for actual temperature. The size should be the same as T1, T2 and T3 */
BATTERY_PROFILE_STRUCT battery_profile_temperature[] = {
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0}
};

/* T0 -10C */
R_PROFILE_STRUCT r_profile_t0[] = {
	{706, 4348},
	{706, 4323},
	{731, 4297},
	{753, 4266},
	{828, 4232},
	{899, 4210},
	{917, 4193},
	{926, 4177},
	{936, 4161},
	{942, 4145},
	{944, 4130},
	{953, 4115},
	{956, 4102},
	{971, 4092},
	{990, 4081},
	{996, 4063},
	{986, 4038},
	{976, 4013},
	{974, 3992},
	{976, 3976},
	{975, 3963},
	{980, 3951},
	{981, 3941},
	{976, 3930},
	{973, 3917},
	{970, 3905},
	{965, 3893},
	{968, 3882},
	{968, 3873},
	{970, 3863},
	{972, 3855},
	{976, 3847},
	{981, 3840},
	{986, 3834},
	{993, 3828},
	{998, 3822},
	{1003, 3816},
	{1011, 3811},
	{1019, 3807},
	{1022, 3802},
	{1030, 3798},
	{1036, 3794},
	{1040, 3791},
	{1048, 3788},
	{1054, 3786},
	{1066, 3783},
	{1072, 3780},
	{1086, 3777},
	{1098, 3773},
	{1112, 3768},
	{1131, 3763},
	{1150, 3758},
	{1173, 3752},
	{1198, 3745},
	{1228, 3737},
	{1263, 3729},
	{1305, 3721},
	{1352, 3715},
	{1409, 3709},
	{1481, 3704},
	{1562, 3698},
	{1650, 3686},
	{1730, 3659},
	{1808, 3605},
	{1910, 3514},
	{2039, 3351},
	{2039, 3351},
	{2039, 3351},
	{2039, 3351},
	{2039, 3351},
	{2039, 3351},
	{2039, 3351},
	{2039, 3351},
	{2039, 3351},
	{2039, 3351},
	{2039, 3351},
	{2039, 3351},
	{2039, 3351}
};

/* T1 0C */
R_PROFILE_STRUCT r_profile_t1[] = {
	{299, 4376},
	{299, 4336},
	{398, 4287},
	{422, 4264},
	{429, 4245},
	{435, 4228},
	{439, 4212},
	{443, 4196},
	{448, 4181},
	{452, 4166},
	{457, 4151},
	{461, 4136},
	{466, 4122},
	{468, 4107},
	{469, 4095},
	{478, 4085},
	{497, 4077},
	{498, 4060},
	{488, 4034},
	{482, 4010},
	{479, 3992},
	{479, 3979},
	{481, 3970},
	{486, 3963},
	{488, 3956},
	{485, 3947},
	{479, 3936},
	{473, 3923},
	{464, 3910},
	{456, 3896},
	{452, 3884},
	{448, 3872},
	{444, 3862},
	{443, 3853},
	{446, 3845},
	{447, 3838},
	{450, 3831},
	{454, 3825},
	{454, 3819},
	{461, 3814},
	{465, 3809},
	{468, 3805},
	{471, 3800},
	{475, 3797},
	{478, 3793},
	{482, 3790},
	{485, 3787},
	{488, 3784},
	{491, 3782},
	{495, 3781},
	{498, 3779},
	{502, 3777},
	{507, 3774},
	{512, 3770},
	{519, 3766},
	{525, 3762},
	{535, 3757},
	{546, 3750},
	{560, 3743},
	{577, 3735},
	{598, 3726},
	{622, 3716},
	{652, 3707},
	{694, 3702},
	{750, 3699},
	{828, 3694},
	{936, 3687},
	{1069, 3661},
	{1232, 3597},
	{1501, 3496},
	{1504, 3391},
	{1504, 3391},
	{1504, 3391},
	{1504, 3391},
	{1504, 3391},
	{1504, 3391},
	{1504, 3391},
	{1504, 3391}
};

/* T2 25C */
R_PROFILE_STRUCT r_profile_t2[] = {
	{181, 4366},
	{181, 4343},
	{178, 4323},
	{175, 4304},
	{174, 4287},
	{174, 4271},
	{174, 4254},
	{175, 4238},
	{176, 4222},
	{177, 4207},
	{179, 4191},
	{181, 4176},
	{183, 4161},
	{184, 4146},
	{185, 4131},
	{187, 4116},
	{190, 4102},
	{192, 4087},
	{195, 4074},
	{203, 4065},
	{207, 4053},
	{202, 4033},
	{198, 4013},
	{203, 3998},
	{205, 3989},
	{212, 3982},
	{211, 3973},
	{214, 3963},
	{213, 3952},
	{218, 3942},
	{217, 3931},
	{212, 3919},
	{204, 3904},
	{189, 3888},
	{177, 3874},
	{174, 3863},
	{171, 3853},
	{170, 3845},
	{171, 3838},
	{170, 3832},
	{171, 3825},
	{172, 3820},
	{173, 3815},
	{174, 3809},
	{176, 3805},
	{177, 3801},
	{178, 3796},
	{179, 3792},
	{180, 3789},
	{182, 3786},
	{182, 3783},
	{183, 3779},
	{181, 3776},
	{180, 3772},
	{178, 3768},
	{176, 3764},
	{175, 3759},
	{172, 3754},
	{173, 3749},
	{174, 3744},
	{176, 3740},
	{178, 3733},
	{177, 3724},
	{178, 3716},
	{179, 3707},
	{175, 3696},
	{177, 3692},
	{182, 3690},
	{190, 3689},
	{201, 3685},
	{204, 3668},
	{209, 3609},
	{233, 3519},
	{305, 3365},
	{305, 3365},
	{305, 3365},
	{305, 3365},
	{305, 3365}
};

/* T3 50C */
R_PROFILE_STRUCT r_profile_t3[] = {
	{133, 4389},
	{122, 4354},
	{121, 4329},
	{120, 4308},
	{119, 4289},
	{119, 4272},
	{161, 4272},
	{160, 4255},
	{201, 4255},
	{200, 4239},
	{200, 4223},
	{239, 4223},
	{239, 4207},
	{238, 4192},
	{237, 4176},
	{237, 4161},
	{236, 4146},
	{236, 4131},
	{235, 4116},
	{234, 4102},
	{233, 4088},
	{232, 4074},
	{231, 4061},
	{230, 4047},
	{229, 4034},
	{228, 4022},
	{227, 4009},
	{227, 3998},
	{227, 3986},
	{227, 3975},
	{227, 3964},
	{229, 3954},
	{232, 3944},
	{240, 3934},
	{251, 3924},
	{256, 3914},
	{246, 3900},
	{221, 3881},
	{207, 3867},
	{201, 3858},
	{198, 3849},
	{197, 3842},
	{197, 3835},
	{197, 3829},
	{198, 3823},
	{198, 3818},
	{199, 3813},
	{199, 3808},
	{200, 3804},
	{200, 3799},
	{200, 3796},
	{200, 3792},
	{201, 3788},
	{202, 3785},
	{203, 3782},
	{204, 3779},
	{205, 3775},
	{206, 3771},
	{206, 3766},
	{208, 3762},
	{209, 3757},
	{211, 3751},
	{218, 3747},
	{229, 3743},
	{238, 3737},
	{245, 3730},
	{244, 3721},
	{234, 3714},
	{217, 3703},
	{209, 3694},
	{228, 3692},
	{297, 3691},
	{475, 3689},
	{748, 3683},
	{1280, 3653},
	{1477, 3585},
	{1756, 3482},
	{1924, 3289}
};

/* r-table profile for actual temperature. The size should be the same as T1, T2 and T3 */
R_PROFILE_STRUCT r_profile_temperature[] = {
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0}
};

/* ============================================================
// function prototype
// ============================================================*/
int fgauge_get_saddles(void);
BATTERY_PROFILE_STRUCT_P fgauge_get_profile(unsigned int temperature);

int fgauge_get_saddles_r_table(void);
R_PROFILE_STRUCT_P fgauge_get_profile_r_table(unsigned int temperature);

#endif	/*#ifndef _CUST_BATTERY_METER_TABLE_H*/

